/*SDK文档 */
var UIDA={};

UIDA.GMS={};

/**
 * 前置处理器
 * 你可以在这里加一些公关业务逻辑
 * 如进行token等公共参数的填充
 * @param req 请求
 * @returns 仅返回true时继续执行,否则“return”
 */
UIDA.GMS.preHandler=function(req){
	req.serviceModule="serviceModule";
	req.token="token";
	return true;
};

/**
 * 后置处理器
 * 你可以对整个请求响应做统一的业务处理
 * 如统一的错误错误提示
* @param req  请求参数
* @param data 响应结果
* @returns 仅返回true时继续执行,否则“return”
 */
UIDA.GMS.postHandler=function(req,data){
	return true;
};

/**
 * 发送和统一处理响应
 * @param req 请求参数
 * @param callBack
 */
UIDA.GMS.sendReq=function(req,callBack){
	
	//前置处理器
	var f=UIDA.GMS.preHandler(req);
	if(f != true){
		return;
	}
	
	commonLogic.serviceCaller(req,function(data){
		//后置处理器
		var f=UIDA.GMS.preHandler(data);
		if(f == true && data.flag == "true"){
			callBack(data.result);
		}
	});
};