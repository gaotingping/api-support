E:\workspace\msb-support\msb-core>
mvn clean package deploy  -Dmaven.test.skip=true

1.封装和总线对接过程，方便管理和统一升级，提供开发效率
2.参数自动注入，让接口实现更容易阅读和维护
3.文档自动生成，避免手动写文档耗时以及个人喜好差异，造成文档参差不齐，和代码不对待等等一系列问题
4.可以扩展：基于mybatis的慢日志记录(能记录下参数，那个方法，大大简便开发维护)
5.运行日志统计和监控中心，可以按需要收集操作日志，日后扩展为监控中心等等，都是可行的
6.建立体系和规范，方便统计维护和升级变动等等
7.可以扩展DefaultCommentGenerator(见CustomeCommentGenerator)，
将表说明直接注解标注到po,减少手工写注解(建议放到对应jar的org.mybatis.generator.internal下)
8.DTO PO VO TO等等最好规范，别面向字符串开发


#功能定位
1.封装和总线的对接(服务转发)
2.文档自动生成(接口写好，文档就好了，而且绝对的对应)
3.参数自动注入(比args更好的阅读性)
4.基于此机制，可以实现一些公关功能抽取等扩展可行性(提供了Interceptor)
5.建议的分层:api-service-dao

#不足
1.实践性验证
2.为了方便，很多实现类都采取自动扫描和动态注入


#只提供服务转发等核心功能，其它所有都属于插件试扩展功能
扩展:1监控，参数验证，等等其它任何扩展
#
类似于spring的:
前置
后置
环绕-建议方式，可包含环绕通知

功能界定:
1.对接api网关
2.生成客户端sdk[js,安卓，ios等]
3.文档
4.总体管制


#基于如下注解，可以扩展监控或参数验证
ApiMonitor.java
ApiValidation.java




